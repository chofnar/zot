on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published
name: build-test
jobs:
  build-test-arch:
    name: Build and test ZOT
    runs-on: macos-latest
    strategy:
      matrix:
        os: [darwin]
        arch: [amd64, arm64]
    steps:
      - name: Set up Docker and localstack
        run: |
          HOMEBREW_NO_AUTO_UPDATE=1 brew install --cask docker
          sudo /Applications/Docker.app/Contents/MacOS/Docker --unattended --install-privileged-components
          open -a /Applications/Docker.app --args --unattended --accept-license
          echo "We are waiting for Docker to be up and running. It can take over 2 minutes..."
          while ! /Applications/Docker.app/Contents/Resources/bin/docker info &>/dev/null; do sleep 1; done
          brew install localstack
          SERVICES=s3 localstack start -d
      - name: Install go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
      - name: Check out source code
        uses: actions/checkout@v1
      - name: Cache go dependencies
        id: cache-go-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install go dependencies
        if: steps.cache-go-dependencies.outputs.cache-hit != 'true'
        run: go mod download
      - name: Install other dependencies
        run: |
          cd $GITHUB_WORKSPACE
          go install github.com/swaggo/swag/cmd/swag@v1.6.3
          brew update
          brew install rpm
          brew install snap
          brew install libgpgme-dev libassuan-dev libbtrfs-dev libdevmapper-dev pkg-config
          git clone https://github.com/containers/skopeo -b v1.6.1 $GITHUB_WORKSPACE/src/github.com/containers/skopeo
          cd $GITHUB_WORKSPACE/src/github.com/containers/skopeo && make bin/skopeo
          cd $GITHUB_WORKSPACE
          curl -Lo notation.tar.gz https://github.com/notaryproject/notation/releases/download/v0.7.1-alpha.1/notation_0.7.1-alpha.1_linux_amd64.tar.gz
          tar xvzf notation.tar.gz -C /usr/bin notation
          go install github.com/wadey/gocovmerge@latest
      - name: Run build and test
        timeout-minutes: 60
        run: |
          echo "Building for $OS:$ARCH"
          cd $GITHUB_WORKSPACE
          if [[ $OS == "linux" && $ARCH == "amd64" ]]; then
            make OS=$OS ARCH=$ARCH
            env "PATH=$PATH" make privileged-test
          else
            make OS=$OS ARCH=$ARCH binary binary-minimal binary-debug cli bench exporter-minimal test covthml check
          fi
        env:
          S3MOCK_ENDPOINT: localhost:4566
          AWS_ACCESS_KEY_ID: fake
          AWS_SECRET_ACCESS_KEY: fake
          OS: ${{ matrix.os }}
          ARCH: ${{ matrix.arch }}
      - name: Upload code coverage
        uses: codecov/codecov-action@v2
      - if: github.event_name == 'release' && github.event.action == 'published'
        name: Publish artifacts on releases
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bin/z*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
